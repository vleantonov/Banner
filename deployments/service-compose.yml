version: '3.7'
services:
  postgres:
    image: postgres:14
    hostname: ${POSTGRES_HOST}
    env_file:
      - ../.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 2
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: "on-failure"
    networks:
      - banner-net

  rabbitmq:
    image: rabbitmq:3.10.7-management
    env_file:
      - ../.env
    hostname: ${RABBITMQ_HOST}
    restart: "on-failure"
    ports:
      - "${RABBITMQ_PORT_MANAGEMENT}:15672"
      - "${RABBITMQ_PORT}:5672"
    networks:
      - banner-net
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  banner:
    image: banner_app
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../.env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    restart: "on-failure"
    networks:
      - banner-net

  banner-worker:
    image: banner_app
    depends_on:
      postgres:
        condition: service_healthy
      banner:
        condition: service_started
      rabbitmq:
        condition: service_started
    env_file:
      - ../.env
    networks:
      - banner-net
    restart: "on-failure"
    command: [ "./worker" ]

volumes:
  postgres_data:
  rabbitmq-data:

networks:
  banner-net:
    driver: bridge
    name: banner-net
