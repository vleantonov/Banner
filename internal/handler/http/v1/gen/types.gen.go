// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package api

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error *string `json:"error,omitempty"`
}

// PostAuthLoginResponse Токен пользователя
type PostAuthLoginResponse struct {
	Token string `json:"token"`
}

// PostBannerResponse defines model for PostBannerResponse.
type PostBannerResponse struct {
	// BannerId Идентификатор созданного баннера
	BannerId *int `json:"banner_id,omitempty"`
}

// PatchBannerRequestBody defines model for PatchBannerRequestBody.
type PatchBannerRequestBody struct {
	// Content Содержимое баннера
	Content *map[string]interface{} `json:"content"`

	// FeatureId Идентификатор фичи
	FeatureId *int `json:"feature_id"`

	// IsActive Флаг активности баннера
	IsActive *bool `json:"is_active"`

	// TagIds Идентификаторы тэгов
	TagIds *[]int `json:"tag_ids"`
}

// PostBannerRequestBody defines model for PostBannerRequestBody.
type PostBannerRequestBody struct {
	// Content Содержимое баннера
	Content *map[string]interface{} `json:"content,omitempty"`

	// FeatureId Идентификатор фичи
	FeatureId *int `json:"feature_id,omitempty"`

	// IsActive Флаг активности баннера
	IsActive *bool `json:"is_active,omitempty"`

	// TagIds Идентификаторы тэгов
	TagIds *[]int `json:"tag_ids,omitempty"`
}

// UserRequestBody defines model for UserRequestBody.
type UserRequestBody struct {
	// Login Логин пользователя
	Login string `json:"login"`

	// Password Пароль пользователя
	Password string `json:"password"`
}

// PostAuthLoginJSONBody defines parameters for PostAuthLogin.
type PostAuthLoginJSONBody struct {
	// Login Логин пользователя
	Login string `json:"login"`

	// Password Пароль пользователя
	Password string `json:"password"`
}

// PostAuthRegisterJSONBody defines parameters for PostAuthRegister.
type PostAuthRegisterJSONBody struct {
	// Login Логин пользователя
	Login string `json:"login"`

	// Password Пароль пользователя
	Password string `json:"password"`
}

// DeleteBannerParams defines parameters for DeleteBanner.
type DeleteBannerParams struct {
	// TagId Тег баннера для удаления
	TagId *int `form:"tag_id,omitempty" json:"tag_id,omitempty"`

	// FeatureId Фича баннера для удаления
	FeatureId *int `form:"feature_id,omitempty" json:"feature_id,omitempty"`

	// Token Токен админа
	Token *string `json:"token,omitempty"`
}

// GetBannerParams defines parameters for GetBanner.
type GetBannerParams struct {
	FeatureId *int `form:"feature_id,omitempty" json:"feature_id,omitempty"`
	TagId     *int `form:"tag_id,omitempty" json:"tag_id,omitempty"`
	Limit     *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset    *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Token Токен админа
	Token *string `json:"token,omitempty"`
}

// PostBannerJSONBody defines parameters for PostBanner.
type PostBannerJSONBody struct {
	// Content Содержимое баннера
	Content *map[string]interface{} `json:"content,omitempty"`

	// FeatureId Идентификатор фичи
	FeatureId *int `json:"feature_id,omitempty"`

	// IsActive Флаг активности баннера
	IsActive *bool `json:"is_active,omitempty"`

	// TagIds Идентификаторы тэгов
	TagIds *[]int `json:"tag_ids,omitempty"`
}

// PostBannerParams defines parameters for PostBanner.
type PostBannerParams struct {
	// Token Токен админа
	Token *string `json:"token,omitempty"`
}

// DeleteBannerIdParams defines parameters for DeleteBannerId.
type DeleteBannerIdParams struct {
	// Token Токен админа
	Token *string `json:"token,omitempty"`
}

// PatchBannerIdJSONBody defines parameters for PatchBannerId.
type PatchBannerIdJSONBody struct {
	// Content Содержимое баннера
	Content *map[string]interface{} `json:"content"`

	// FeatureId Идентификатор фичи
	FeatureId *int `json:"feature_id"`

	// IsActive Флаг активности баннера
	IsActive *bool `json:"is_active"`

	// TagIds Идентификаторы тэгов
	TagIds *[]int `json:"tag_ids"`
}

// PatchBannerIdParams defines parameters for PatchBannerId.
type PatchBannerIdParams struct {
	// Token Токен админа
	Token *string `json:"token,omitempty"`
}

// GetUserBannerParams defines parameters for GetUserBanner.
type GetUserBannerParams struct {
	TagId           int   `form:"tag_id" json:"tag_id"`
	FeatureId       int   `form:"feature_id" json:"feature_id"`
	UseLastRevision *bool `form:"use_last_revision,omitempty" json:"use_last_revision,omitempty"`

	// Token Токен пользователя
	Token *string `json:"token,omitempty"`
}

// PostAuthLoginJSONRequestBody defines body for PostAuthLogin for application/json ContentType.
type PostAuthLoginJSONRequestBody PostAuthLoginJSONBody

// PostAuthRegisterJSONRequestBody defines body for PostAuthRegister for application/json ContentType.
type PostAuthRegisterJSONRequestBody PostAuthRegisterJSONBody

// PostBannerJSONRequestBody defines body for PostBanner for application/json ContentType.
type PostBannerJSONRequestBody PostBannerJSONBody

// PatchBannerIdJSONRequestBody defines body for PatchBannerId for application/json ContentType.
type PatchBannerIdJSONRequestBody PatchBannerIdJSONBody
