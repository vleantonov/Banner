openapi: 3.0.0
info:
  title: Сервис баннеров
  version: 1.0.0
paths:
  /auth/register:
    post:
      summary: Регистрация пользователя
      requestBody:
        $ref: "#/components/requestBodies/UserRequestBody"
      responses:
        '201':
          description: Пользователь зарегистрирован

        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь уже существует
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/login:
    post:
      summary: Авторизация пользователя и получение токена
      requestBody:
        $ref: "#/components/requestBodies/UserRequestBody"
      responses:
        '200':
          description: Пользователь авторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostAuthLoginResponse"

        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


  /user_banner:
    get:
      summary: Получение баннера для пользователя
      parameters:
        - in: query
          name: tag_id
          required: true
          schema:
            type: integer
            description: Тэг пользователя
        - in: query
          name: feature_id
          required: true
          schema:
            type: integer
            description: Идентификатор фичи
        - in: query
          name: use_last_revision
          required: false
          schema:
            type: boolean
            default: false
            description: Получать актуальную информацию
        - in: header
          name: token
          description: Токен пользователя
          schema:
            type: string
            example: "user_token"
      responses:
        '200':
          description: Баннер пользователя
          content:
            application/json:
              schema:
                description: JSON-отображение баннера
                type: object
                additionalProperties: true
                example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '404':
          description: Баннер для не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /banner:
    get:
      summary: Получение всех баннеров c фильтрацией по фиче и/или тегу
      parameters:
        - in: header
          name: token
          description: Токен админа
          schema:
            type: string
            example: "admin_token"
        - in: query
          name: feature_id
          required: false
          schema:
            type: integer
            description: Идентификатор фичи
        - in: query
          name: tag_id
          required: false
          schema:
            type: integer
            description: Идентификатор тега
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            description: Лимит
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            description: Оффсет
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    banner_id:
                      type: integer
                      description: Идентификатор баннера
                    tag_ids:
                      type: array
                      description: Идентификаторы тэгов
                      items:
                        type: integer
                    feature_id:
                      type: integer
                      description: Идентификатор фичи
                    content:
                      type: object
                      description: Содержимое баннера
                      additionalProperties: true
                      example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
                    is_active:
                      type: boolean
                      description: Флаг активности баннера
                    created_at:
                      type: string
                      format: date-time
                      description: Дата создания баннера
                    updated_at:
                      type: string
                      format: date-time
                      description: Дата обновления баннера
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      summary: Создание нового баннера
      parameters:
        - in: header
          name: token
          description: Токен админа
          schema:
            type: string
            example: "admin_token"
      requestBody:
        $ref: "#/components/requestBodies/PostBannerRequestBody"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostBannerResponse"

        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Удаление баннеров по тегу или фиче
      parameters:
        - in: header
          name: token
          description: Токен админа
          schema:
            type: string
            example: "admin_token"
        - in: query
          name: tag_id
          description: Тег баннера для удаления
          schema:
            type: integer
            example: 1
        - in: query
          name: feature_id
          description: Фича баннера для удаления
          schema:
            type: integer
            example: 1
      responses:
        '202':
          description: Сервер получил запрос на удаление
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostBannerResponse"
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /banner/{id}:
    patch:
      summary: Обновление содержимого баннера
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: Идентификатор баннера
        - in: header
          name: token
          description: Токен админа
          schema:
            type: string
            example: "admin_token"
      requestBody:
        $ref: "#/components/requestBodies/PatchBannerRequestBody"
      responses:
        '200':
          description: OK
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '404':
          description: Баннер не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Удаление баннера по идентификатору
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: Идентификатор баннера
        - in: header
          name: token
          description: Токен админа
          schema:
            type: string
            example: "admin_token"
      responses:
        '204':
          description: Баннер успешно удален
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '404':
          description: Баннер для тэга не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  requestBodies:
    PostBannerRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tag_ids:
                type: array
                description: Идентификаторы тэгов
                items:
                  type: integer
              feature_id:
                type: integer
                description: Идентификатор фичи
              content:
                default: '{}'
                type: object
                description: Содержимое баннера
                additionalProperties: true
                example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
              is_active:
                type: boolean
                description: Флаг активности баннера

    PatchBannerRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tag_ids:
                nullable: true
                type: array
                description: Идентификаторы тэгов
                items:
                  type: integer
              feature_id:
                nullable: true
                type: integer
                description: Идентификатор фичи
              content:
                nullable: true
                type: object
                description: Содержимое баннера
                additionalProperties: true
                example: '{"title": "some_title", "text": "some_text", "url": "some_url"}'
              is_active:
                nullable: true
                type: boolean
                description: Флаг активности баннера

    UserRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - login
              - password
            properties:
              login:
                nullable: false
                type: string
                description: Логин пользователя
              password:
                nullable: false
                type: string
                description: Пароль пользователя


  schemas:
    PostBannerResponse:
      type: object
      properties:
        banner_id:
          type: integer
          description: Идентификатор созданного баннера

    PostAuthLoginResponse:
      description: Токен пользователя
      type: object
      required:
        - token
      properties:
        token:
          type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
